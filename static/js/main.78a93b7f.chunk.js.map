{"version":3,"sources":["components/GoodsList.js","api/goods.js","App.js","index.js"],"names":["GoodsList","React","memo","goods","map","good","key","id","style","color","name","propTypes","PropTypes","arrayOf","shape","number","isRequired","string","getAll","fetch","then","response","json","get5First","result","sort","firstElement","secondElement","localeCompare","slice","getRedGoods","filter","App","state","onFilter","callback","a","setState","init","type","onClick","this","Component","ReactDOM","render","document","getElementById"],"mappings":"wTAGaA,EAAYC,IAAMC,MAC7B,gBAAGC,EAAH,EAAGA,MAAH,OACE,4BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,EAAKE,GAAIC,MAAO,CAAEC,MAAOJ,EAAKI,QACpCJ,EAAKK,aAOhBV,EAAUW,UAAY,CACpBR,MAAOS,IAAUC,QACfD,IAAUE,MAAM,CACdP,GAAIK,IAAUG,OAAOC,WACrBN,KAAME,IAAUK,OAAOD,WACvBP,MAAOG,IAAUK,OAAOD,cAE1BA,Y,MCnBG,SAASE,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAY,kBACvBL,IACGE,MAAK,SAAAI,GAAM,OACVA,EACGC,MAAK,kBAASC,EAAT,EAAGhB,KAA8BiB,EAAjC,EAA2BjB,KAA3B,OACJgB,EAAaE,cAAcD,MAE5BE,MAAM,EAAG,OAILC,EAAc,kBACzBZ,IACGE,MAAK,SAAAI,GAAM,OACVA,EACGO,QAAO,kBAAyB,QAAzB,EAAGtB,aCqCJuB,E,4MApDbC,MAAQ,CACN9B,MAAO,I,EAGT+B,SAAW,SAACC,IACA,uCAAG,4BAAAC,EAAA,sEACUD,IADV,OACLX,EADK,OAGX,EAAKa,SAAS,CAAElC,MAAOqB,IAHZ,2CAAH,qDAMVc,I,4CAGF,WAAU,IAAD,OACP,OACE,oCACE,qDAEA,4BACEC,KAAK,SACLC,QAAS,WACP,EAAKN,SAAShB,KAHlB,kBASA,4BACEqB,KAAK,SACLC,QAAS,WACP,EAAKN,SAASX,KAHlB,sBASA,4BACEgB,KAAK,SACLC,QAAS,WACP,EAAKN,SAASJ,KAHlB,kBASA,kBAAC9B,EAAD,CAAWG,MAAOsC,KAAKR,MAAM9B,a,GA/CnBF,IAAMyC,WCHxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.78a93b7f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const GoodsList = React.memo(\n  ({ goods }) => (\n    <ul>\n      {goods.map(good => (\n        <li key={good.id} style={{ color: good.color }}>\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  ),\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      color: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n","// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll() {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => (\n  getAll()\n    .then(result => (\n      result\n        .sort(({ name: firstElement }, { name: secondElement }) => (\n          firstElement.localeCompare(secondElement)\n        ))\n        .slice(0, 5)\n    ))\n);\n\nexport const getRedGoods = () => (\n  getAll()\n    .then(result => (\n      result\n        .filter(({ color }) => color === 'red')\n    ))\n);\n","import React from 'react';\nimport { GoodsList } from './components/GoodsList';\n\nimport './App.scss';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nclass App extends React.Component {\n  state = {\n    goods: [],\n  }\n\n  onFilter = (callback) => {\n    const init = async() => {\n      const result = await callback();\n\n      this.setState({ goods: result });\n    };\n\n    init();\n  }\n\n  render() {\n    return (\n      <>\n        <h1>Dynamic list of Goods</h1>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.onFilter(getAll);\n          }}\n        >\n          Load All goods\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.onFilter(get5First);\n          }}\n        >\n          Load 5 first goods\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.onFilter(getRedGoods);\n          }}\n        >\n          Load red goods\n        </button>\n\n        <GoodsList goods={this.state.goods} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}